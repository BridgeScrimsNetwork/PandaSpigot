From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: necrozma <necrozma999@gmail.com>
Date: Wed, 17 May 2023 14:24:08 -0600
Subject: [PATCH] Halfmaster arrows


diff --git a/src/main/java/net/minecraft/server/EntityArrow.java b/src/main/java/net/minecraft/server/EntityArrow.java
index 60ba16d231e2d614f56aee3c7ba5c0d4715d0269..111e2bf0c9a6a2f6ea362b24a97187aaf3613649 100644
--- a/src/main/java/net/minecraft/server/EntityArrow.java
+++ b/src/main/java/net/minecraft/server/EntityArrow.java
@@ -119,6 +119,9 @@ public class EntityArrow extends Entity implements IProjectile {
         this.motX = d0;
         this.motY = d1;
         this.motZ = d2;
+		
+        this.alterArrowFlight();
+
         float f3 = MathHelper.sqrt(d0 * d0 + d2 * d2);
 
         this.lastYaw = this.yaw = (float) (MathHelper.b(d0, d2) * 180.0D / 3.1415927410125732D);
@@ -203,6 +206,9 @@ public class EntityArrow extends Entity implements IProjectile {
                             entity = entity1;
                             d0 = d1;
                         }
+                    } else if (axisalignedbb1.a(vec3d)) {
+                        entity = entity1;
+                        d0 = 0.0D;
                     }
                 }
             }
@@ -386,6 +392,21 @@ public class EntityArrow extends Entity implements IProjectile {
             this.checkBlockCollisions();
         }
     }
+	
+    public void alterArrowFlight() {
+
+        this.locX = (double) MathHelper.floor(this.locX * 32.0D) / 32.0D;
+        this.locY = (double) MathHelper.floor(this.locY * 32.0D) / 32.0D;
+        this.locZ = (double) MathHelper.floor(this.locZ * 32.0D) / 32.0D;
+        this.motX = (double) ((int) (this.motX * 8000.0D)) / 8000.0D;
+        this.motY = (double) ((int) (this.motY * 8000.0D)) / 8000.0D;
+        this.motZ = (double) ((int) (this.motZ * 8000.0D)) / 8000.0D;
+
+        this.motX /= 0.99f;
+        this.motY /= 0.99f;
+        this.motZ /= 0.99f;
+        this.motY += 0.05f;
+    }
 
     public void b(NBTTagCompound nbttagcompound) {
         nbttagcompound.setShort("xTile", (short) this.d);
diff --git a/src/main/java/net/minecraft/server/EntityTrackerEntry.java b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
index d67f464ac0ed469f9ba70f7ab97a8eece3d8064d..96c14bebc5f08e9d195b2451e4fd162c516b03f8 100644
--- a/src/main/java/net/minecraft/server/EntityTrackerEntry.java
+++ b/src/main/java/net/minecraft/server/EntityTrackerEntry.java
@@ -482,8 +482,7 @@ public class EntityTrackerEntry {
             return new PacketPlayOutSpawnEntity(this.tracker, 90, entityhuman != null ? entityhuman.getId() : this.tracker.getId());
         } else if (this.tracker instanceof EntityArrow) {
             Entity entity = ((EntityArrow) this.tracker).shooter;
-
-            return new PacketPlayOutSpawnEntity(this.tracker, 60, entity != null ? entity.getId() : this.tracker.getId());
+            return new PacketPlayOutSpawnEntity(this.tracker, 60, entity != null ? entity.getId() : this.tracker.getId(), true);
         } else if (this.tracker instanceof EntitySnowball) {
             return new PacketPlayOutSpawnEntity(this.tracker, 61);
         } else if (this.tracker instanceof EntityPotion) {
diff --git a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntity.java b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntity.java
index a4626ccbdcd59c0c7e6b8893a904780eeac124c8..60069d0dadf1bf62390de71fac645b2fd82f2b34 100644
--- a/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntity.java
+++ b/src/main/java/net/minecraft/server/PacketPlayOutSpawnEntity.java
@@ -67,6 +67,59 @@ public class PacketPlayOutSpawnEntity implements Packet<PacketListenerPlayOut> {
         }
 
     }
+	
+    public PacketPlayOutSpawnEntity(Entity entity, int i, int j, boolean alterArrowFlight) {
+        this.a = entity.getId();
+        this.b = MathHelper.floor(entity.locX * 32.0D);
+        this.c = MathHelper.floor(entity.locY * 32.0D);
+        this.d = MathHelper.floor(entity.locZ * 32.0D);
+        this.h = MathHelper.d(entity.pitch * 256.0F / 360.0F);
+        this.i = MathHelper.d(entity.yaw * 256.0F / 360.0F);
+        this.j = i;
+        this.k = j;
+        if (j > 0) {
+            double d0 = entity.motX;
+            double d1 = entity.motY;
+            double d2 = entity.motZ;
+            double d3 = 3.9D;
+
+            if (d0 < -d3) {
+                d0 = -d3;
+            }
+
+            if (d1 < -d3) {
+                d1 = -d3;
+            }
+
+            if (d2 < -d3) {
+                d2 = -d3;
+            }
+
+            if (d0 > d3) {
+                d0 = d3;
+            }
+
+            if (d1 > d3) {
+                d1 = d3;
+            }
+
+            if (d2 > d3) {
+                d2 = d3;
+            }
+
+            if (alterArrowFlight) {
+                d0 *= 0.99f;
+                d1 *= 0.99f;
+                d2 *= 0.99f;
+                d1 -= 0.05f;
+            }
+
+            this.e = (int) (d0 * 8000.0D);
+            this.f = (int) (d1 * 8000.0D);
+            this.g = (int) (d2 * 8000.0D);
+        }
+
+    }
 
     public void a(PacketDataSerializer packetdataserializer) throws IOException {
         this.a = packetdataserializer.e();
